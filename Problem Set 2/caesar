//This program takes a number (key) from the command line argument and plaintext (user input) and outputs an encrypted message
#include <stdio.h>
#include <cs50.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>



//Main Program, uses command line argument for the key
int main(int argc, string argv[])
{
    if (argc != 2)
    {
        printf("Usage: ./caesar key\n"); //error message and returns 1
        return 1;
    }

    if (argc == 2)
    {
        //Iterates through each character to see if there are non integer values, if so exits the program
        for (int i = 0; i < strlen(argv[1]); i++)
        {
            if (!isdigit(argv[1][i]))
            {
                printf("Usage: ./caesar key\n");
                return 1;
            }
        }

        //Converts the string to an int value and stores the int into a variable
        int key = atoi(argv[1]);


        //Prompts user for plaintext and iterates over each character
        //Preserves the case and ignores any value other than alphabetical values
        //Subtracts by 'a' or 'A' ASCII code value
        //Adds the key number to the character ASCII code and divides by 26 to wraparound from Z to A
        string plaintext = get_string("plaintext:  ");
        for (int i = 0; i < strlen(plaintext); i++)
        {
            if (isalpha(plaintext[i]) && islower(plaintext[i]))
            {
                plaintext[i] -= 97;
                plaintext[i] += key;
                plaintext[i] %= 26;
                plaintext[i] += 97;


            }

            if (isalpha(plaintext[i]) && isupper(plaintext[i]))
            {
                plaintext[i] -= 65;
                plaintext[i] += key;
                plaintext[i] %= 26;
                plaintext[i] += 65;

            }

        }
        printf("ciphertext: %s\n", plaintext);
        return 0;

    }
}
