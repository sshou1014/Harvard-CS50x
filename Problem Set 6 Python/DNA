import cs50
import csv
import sys


def main():

    # Ensure correct usage
    if len(sys.argv) != 3:
        sys.exit("Usage: python dna.py STR_CSV_FILENAME DNASequence_TXT")

    # Read STR CSV file into memory as a list of dictionaries
    person_STR_count = []
    filename1 = sys.argv[1]
    with open(filename1, "r") as file1:
        reader = csv.DictReader(file1)
        for row in reader:
            person_STR_count.append(row)

    # Read DNA sequence txt file into memory into a list
    DNA_Sequence = []
    filename2 = sys.argv[2]
    with open(filename2, "r") as file2:
        DNA_Sequence = file2.read()

    # Create a list of the dictionary KEYS (in this case these are the STR codes) and then convert them to a set
    # https://stackoverflow.com/questions/11399384/extract-all-keys-from-a-list-of-dictionaries
    # https://stackoverflow.com/questions/3724551/python-uniqueness-for-list-of-lists
    STR_codes = [list(d.keys()) for d in person_STR_count]
    unique_STR_codes = [list(x) for x in set(tuple(x) for x in STR_codes)]

    # Nested for loops to iterate over list of lists. For each STR, compute the longest run of consecutive repeats
    STR_counts = {}
    for i in unique_STR_codes:
        for j in i:
            if j == 'name':
                continue
            d = {j: max_STR(j, DNA_Sequence)}
            STR_counts.update(d)

    # First change the values of the CSV file to ints.
    for i in range(len(person_STR_count)):
        for key in person_STR_count[i]:
            if key != 'name':
                person_STR_count[i][key] = int(person_STR_count[i][key])

    # Then create a subset where the "name" key is eliminated. Then compare the new subset dict with the STR_count dict to see if there's a match. Counter as a flag to see if match or no match
    match = 0
    for i in range(len(person_STR_count)):
        person_STR_count_subset = {key: STR_counts for key, STR_counts in person_STR_count[i].items() if key != "name"} #https://www.kite.com/python/answers/how-to-take-a-subset-of-a-dictionary-in-python
        if person_STR_count_subset == STR_counts:
            print(person_STR_count[i]["name"])
            match = 1

    if (match == 0):
        print("No match.")

# https://stackoverflow.com/questions/61131768/how-to-count-consecutive-substring-in-a-string-in-python-3
def max_STR(STR, Sequence):

    count = 0
    string = Sequence
    pattern = STR
    while pattern in string:
        count += 1
        pattern += STR

    return count


if __name__ == "__main__":
    main()
